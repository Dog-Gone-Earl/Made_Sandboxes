---
# Source: datadog/templates/secret-api-key.yaml
apiVersion: v1
kind: Secret
metadata:
  name: datadog
  namespace: default
  labels: {}
type: Opaque
data:
  api-key: Nzk5MzhlY2FiYWMxNjM1YjhlOTAxNTEyNDEzN2NiNmY=
---

# Source: datadog/templates/install_info-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: datadog-installinfo
  namespace: default
  labels: {}
  annotations: {}
data:
  install_info: |
    ---
    install_method:
      tool: kubernetes sample manifests
      tool_version: kubernetes sample manifests
      installer_version: kubernetes sample manifests
---
# Source: datadog/templates/kube-state-metrics-core-rbac.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRole
metadata:
  labels: {}
  name: datadog-ksm-core
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - nodes
      - pods
      - services
      - resourcequotas
      - replicationcontrollers
      - limitranges
      - persistentvolumeclaims
      - persistentvolumes
      - namespaces
      - endpoints
      - events
    verbs:
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - replicasets
    verbs:
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - daemonsets
      - deployments
      - replicasets
    verbs:
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
      - volumeattachments
    verbs:
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - list
      - watch
---
# Source: datadog/templates/kube-state-metrics-core-rbac.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRoleBinding
metadata:
  labels: {}
  name: datadog-ksm-core
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: datadog-ksm-core
subjects:
  - kind: ServiceAccount
    name: datadog-cluster-agent
    namespace: default

---
# Source: datadog/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
  name: datadog-agent
  namespace: default
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: datadog-agent
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: datadog-agent
      name: datadog-agent
    spec:
      affinity: {}
      containers:
      - command:
        - agent
        - run
        env:
        - name: GODEBUG
          value: x509ignoreCN=0
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DD_LOG_LEVEL
          value: INFO
        - name: DD_DOGSTATSD_PORT
          value: "8125"
        - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
          value: "true"
        - name: DD_CLUSTER_AGENT_ENABLED
          value: "true"
        - name: DD_COLLECT_KUBERNETES_EVENTS
          value: "true"
        - name: DD_LEADER_ELECTION
          value: "true"
        - name: DD_APM_ENABLED
          value: "true"
        - name: DD_APM_IGNORE_RESOURCES
          value: GET (/actuator)?/(health|info)
        - name: DD_LOGS_ENABLED
          value: "true"
        - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
          value: "true"
        - name: DD_AC_EXCLUDE
          value: name:datadog-agent
        - name: DD_LOGS_CONFIG_PROCESSING_RULES
          value: '[{"type": "exclude_at_match", "name": "exclude_healthcheck_and_debug",
            "pattern" : "\"uri\":\"\/(info|__debug__\/.*)\""}]'
        - name: DD_TAGS
          value: location:aws env:ci
        - name: DD_HISTOGRAM_AGGREGATES
          value: avg count
        - name: DD_CRI_SOCKET_PATH
          value: /var/run/containerd/containerd.sock
        - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
          value: "false"
        - name: DD_LOGS_CONFIG_AUTO_MULTI_LINE_DETECTION
          value: "false"
        - name: DD_HEALTH_PORT
          value: "5555"
        - name: DD_DOGSTATSD_SOCKET
          value: /var/run/datadog/dsd.socket
        - name: DD_EXTRA_CONFIG_PROVIDERS
          value: clusterchecks endpointschecks
        - name: DD_IGNORE_AUTOCONF
          value: kubernetes_state
        - name: DD_EXPVAR_PORT
          value: "6000"
        image: gcr.io/datadoghq/agent:7.40.1
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /live
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        name: datadog-agent
        ports:
        - containerPort: 8125
          hostPort: 8125
          name: dogstatsdport
          protocol: UDP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /ready
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 700m
            memory: 1Gi
          requests:
            cpu: 700m
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/datadog-agent/install_info
          name: installinfo
          readOnly: true
          subPath: install_info
        - mountPath: /var/log/datadog
          name: logdatadog
        - mountPath: /tmp
          name: tmpdir
        - mountPath: /host/etc/os-release
          mountPropagation: None
          name: os-release-file
          readOnly: true
        - mountPath: /etc/datadog-agent
          name: config
        - mountPath: /var/run/datadog
          name: dsdsocket
        - mountPath: /opt/datadog-agent/run
          mountPropagation: None
          name: pointerdir
        - mountPath: /var/log/pods
          mountPropagation: None
          name: logpodpath
          readOnly: true
        - mountPath: /var/log/containers
          mountPropagation: None
          name: logscontainerspath
          readOnly: true
        - mountPath: /var/lib/docker/containers
          mountPropagation: None
          name: logdockercontainerpath
          readOnly: true
        - mountPath: /var/run/containerd/containerd.sock
          name: containerdsocket
        - mountPath: /host/var/run
          name: var-run
          readOnly: true
      - command:
        - trace-agent
        - -config=/etc/datadog-agent/datadog.yaml
        env:
        - name: GODEBUG
          value: x509ignoreCN=0
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DD_LOG_LEVEL
          value: INFO
        - name: DD_APM_ENABLED
          value: "true"
        - name: DD_APM_NON_LOCAL_TRAFFIC
          value: "true"
        - name: DD_APM_RECEIVER_PORT
          value: "8126"
        - name: DD_APM_RECEIVER_SOCKET
          value: /var/run/datadog/apm.socket
        - name: DD_DOGSTATSD_SOCKET
          value: /var/run/datadog/dsd.socket
        image: gcr.io/datadoghq/agent:7.40.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          tcpSocket:
            port: 8126
          timeoutSeconds: 5
        name: trace-agent
        ports:
        - containerPort: 8126
          hostPort: 8126
          name: traceport
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/datadog-agent
          name: config
        - mountPath: /host/proc
          mountPropagation: None
          name: procdir
          readOnly: true
        - mountPath: /host/sys/fs/cgroup
          mountPropagation: None
          name: cgroups
          readOnly: true
        - mountPath: /var/log/datadog
          name: logdatadog
        - mountPath: /tmp
          name: tmpdir
        - mountPath: /var/run/datadog
          name: dsdsocket
        - mountPath: /host/var/run
          mountPropagation: None
          name: runtimesocketdir
          readOnly: true
      - command:
        - process-agent
        - --cfgpath=/etc/datadog-agent/datadog.yaml
        env:
        - name: GODEBUG
          value: x509ignoreCN=0
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog
        - name: DD_SITE
          value: datadoghq.com
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DD_PROCESS_AGENT_ENABLED
          value: "true"
        - name: DD_PROCESS_AGENT_DISCOVERY_ENABLED
          value: "false"
        - name: DD_LOG_LEVEL
          value: INFO
        - name: DD_SYSTEM_PROBE_ENABLED
          value: "false"
        - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
          value: "false"
        - name: DD_DOGSTATSD_SOCKET
          value: /var/run/datadog/dsd.socket
        - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
          value: "true"
        image: gcr.io/datadoghq/agent:7.40.1
        imagePullPolicy: Always
        name: process-agent
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/datadog-agent
          name: config
        - mountPath: /var/log/datadog
          name: logdatadog
        - mountPath: /tmp
          name: tmpdir
        - mountPath: /host/etc/os-release
          mountPropagation: None
          name: os-release-file
          readOnly: true
        - mountPath: /host/var/run
          mountPropagation: None
          name: runtimesocketdir
          readOnly: true
        - mountPath: /etc/passwd
          name: passwd
          readOnly: true
        - mountPath: /var/run/datadog
          name: dsdsocket
          readOnly: true
      dnsPolicy: ClusterFirst
      hostPID: true
      initContainers:
      - args:
        - cp -r /etc/datadog-agent /opt
        command:
        - bash
        - -c
        image: gcr.io/datadoghq/agent:7.40.1
        imagePullPolicy: IfNotPresent
        name: init-volume
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/datadog-agent
          name: config
      - args:
        - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do
          bash $script ; done
        command:
        - bash
        - -c
        env:
        - name: GODEBUG
          value: x509ignoreCN=0
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        image: gcr.io/datadoghq/agent:7.40.1
        imagePullPolicy: IfNotPresent
        name: init-config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/log/datadog
          name: logdatadog
        - mountPath: /etc/datadog-agent
          name: config
        - mountPath: /host/proc
          mountPropagation: None
          name: procdir
          readOnly: true
        - mountPath: /host/var/run
          mountPropagation: None
          name: runtimesocketdir
          readOnly: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: datadog-agent
      serviceAccountName: datadog-agent
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: datadog-installinfo
        name: installinfo
      - emptyDir: {}
        name: config
      - emptyDir: {}
        name: logdatadog
      - emptyDir: {}
        name: tmpdir
      - hostPath:
          path: /proc
          type: ""
        name: procdir
      - hostPath:
          path: /sys/fs/cgroup
          type: ""
        name: cgroups
      - hostPath:
          path: /etc/os-release
          type: ""
        name: os-release-file
      - hostPath:
          path: /etc/redhat-release
          type: ""
        name: etc-redhat-release
      - hostPath:
          path: /etc/fedora-release
          type: ""
        name: etc-fedora-release
      - hostPath:
          path: /etc/lsb-release
          type: ""
        name: etc-lsb-release
      - hostPath:
          path: /var/run/datadog/
          type: DirectoryOrCreate
        name: dsdsocket
      - hostPath:
          path: /var/run/datadog/
          type: DirectoryOrCreate
        name: apmsocket
      - emptyDir: {}
        name: s6-run
      - hostPath:
          path: /var/lib/kubelet/seccomp
          type: ""
        name: seccomp-root
      - hostPath:
          path: /etc/passwd
          type: ""
        name: passwd
      - hostPath:
          path: /
          type: ""
        name: hostroot
      - hostPath:
          path: /etc/group
          type: ""
        name: group
      - hostPath:
          path: /opt/datadog-agent/run
          type: ""
        name: pointerdir
      - hostPath:
          path: /var/log/pods
          type: ""
        name: logpodpath
      - hostPath:
          path: /var/log/containers
          type: ""
        name: logscontainerspath
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: logdockercontainerpath
      - hostPath:
          path: /var/run
          type: ""
        name: runtimesocketdir
      - hostPath:
          path: /var/run/containerd/containerd.sock
          type: ""
        name: containerdsocket
      - hostPath:
          path: /var/run
          type: ""
        name: var-run
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 50%
    type: RollingUpdate